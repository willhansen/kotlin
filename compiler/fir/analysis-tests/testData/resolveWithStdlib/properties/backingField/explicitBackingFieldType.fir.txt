FILE: explicitBackingFieldType.kt
    public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final konst a: R|kotlin/Int| = Int(20)
            public get(): R|kotlin/Int|

        public final konst it: R|kotlin/Number|
            private <explicit backing field>: R|kotlin/Int| = Int(4)
            public get(): R|kotlin/Number|

        public final konst joke: R|kotlin/Number|
            private <explicit backing field>: R|kotlin/String| = String(Haha)
            public get(): R|kotlin/Number|

        public final konst incompatible: R|kotlin/Number|
            private <explicit backing field>: R|kotlin/Any?| = Int(42)
            public get(): R|kotlin/Number|

        public final konst customGetterNeeded: R|kotlin/Int|
            private <explicit backing field>: R|kotlin/Number| = Int(42)
            public get(): R|kotlin/Int|

        public final konst invertedTypes: R|kotlin/Int|
            private <explicit backing field>: R|kotlin/Number| = Int(42)
            public get(): R|kotlin/Int| {
                ^ Int(30)
            }

        public final konst uninitialized: R|kotlin/Number|
            private <explicit backing field>: R|kotlin/Int|
            public get(): R|kotlin/Number|

        public final konst uninitializedWithGetter: R|kotlin/Number|
            private <explicit backing field>: R|kotlin/Int|
            public get(): R|kotlin/Number| {
                ^ Int(2)
            }

        public final konst initiaizedWithExplicitBackingField: R|kotlin/collections/List<kotlin/Int>| = R|kotlin/collections/listOf|<R|kotlin/Int|>(vararg(Int(1), Int(2)))
            private <explicit backing field>: R|kotlin/collections/MutableList<kotlin/Int>|
            public get(): R|kotlin/collections/List<kotlin/Int>|

        public final konst p: R|kotlin/Int| = Int(5)
            public get(): R|kotlin/Int| {
                ^ this@R|/A|.F|/A.p|
            }

        public final var setterNeeded: R|kotlin/Int|
            private <explicit backing field>: R|kotlin/String| = String(test)
            public get(): R|kotlin/Int| {
                ^ this@R|/A|.F|/A.setterNeeded|.R|kotlin/String.length|
            }
            public set(konstue: R|kotlin/Int|): R|kotlin/Unit|

    }
