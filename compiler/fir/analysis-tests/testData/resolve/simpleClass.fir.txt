FILE: simpleClass.kt
    public abstract interface SomeInterface : R|kotlin/Any| {
        public abstract fun foo(x: R|kotlin/Int|, y: R|kotlin/String|): R|kotlin/String|

        public abstract konst bar: R|kotlin/Boolean|
            public get(): R|kotlin/Boolean|

    }
    public final class SomeClass : R|SomeInterface| {
        public constructor(): R|SomeClass| {
            super<R|kotlin/Any|>()
        }

        private final konst baz: R|kotlin/Int| = Int(42)
            private get(): R|kotlin/Int|

        public open override fun foo(x: R|kotlin/Int|, y: R|kotlin/String|): R|kotlin/String| {
            ^foo R|<local>/y|.R|kotlin/String.plus|(R|<local>/x|).R|kotlin/String.plus|(this@R|/SomeClass|.R|/SomeClass.baz|)
        }

        public open override var bar: R|kotlin/Boolean|
            public get(): R|kotlin/Boolean| {
                ^ Boolean(true)
            }
            public set(konstue: R|kotlin/Boolean|): R|kotlin/Unit| {
            }

        public final var fau: R|kotlin/Double|
            public get(): R|kotlin/Double|
            public set(konstue: R|kotlin/Double|): R|kotlin/Unit|

    }
