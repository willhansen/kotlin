FILE: const.kt
    public final const konst a: R|kotlin/String| = String(something)
        public get(): R|kotlin/String|
    public final const konst b: <ERROR TYPE REF: Cannot infer variable type without initializer / getter / delegate>
        public get(): <ERROR TYPE REF: Cannot infer variable type without initializer / getter / delegate>
    public final const konst c: R|kotlin/Nothing?| = Null(null)
        public get(): R|kotlin/Nothing?|
    public final const konst d: R|ForConst.Companion| = Q|ForConst|
        public get(): R|ForConst.Companion|
    public final const konst e: R|kotlin/String| = Q|ForConst|.R|/ForConst.Companion.one|()
        public get(): R|kotlin/String|
    public final const konst f: R|kotlin/Int| = Int(1).R|kotlin/Int.plus|(Int(2)).R|kotlin/Int.times|(Int(3)).R|kotlin/Int.div|(Int(4)).R|kotlin/Int.rem|(Int(5)).R|kotlin/Int.minus|(Int(1))
        public get(): R|kotlin/Int|
    public final const konst g: R|kotlin/String| = <strcat>(String(string ), R|/f|)
        public get(): R|kotlin/String|
    public final const konst h: R|kotlin/String| = String(string).R|kotlin/String.plus|(R|/g|)
        public get(): R|kotlin/String|
    public final const konst i: R|kotlin/String| = Q|ForConst|.R|/ForConst.Companion.one|().R|kotlin/String.plus|(String(one))
        public get(): R|kotlin/String|
    public final const konst j: R|kotlin/Int| = Int(4).R|kotlin/Int.times|(Q|ForConst|.R|/ForConst.Companion.two|())
        public get(): R|kotlin/Int|
    public final konst k: R|kotlin/Int| = Int(3).R|kotlin/Int.minus|(Q|ForConst|.R|/ForConst.Companion.two|())
        public get(): R|kotlin/Int|
    public final const konst l: R|kotlin/Int| = R|/k|
        public get(): R|kotlin/Int|
    public final const konst m: R|kotlin/String| = String(123).R|kotlin/String.toString|()
        public get(): R|kotlin/String|
    public final const konst n: R|kotlin/Int| = String(456).R|kotlin/String.length|
        public get(): R|kotlin/Int|
    public final konst o: R|kotlin/String| = String(789)
        public get(): R|kotlin/String|
    public final const konst p: R|kotlin/String| = R|/o|.R|kotlin/String.toString|()
        public get(): R|kotlin/String|
    public final const konst q: R|kotlin/Int| = R|/o|.R|kotlin/String.length|
        public get(): R|kotlin/Int|
    public final class ForConst : R|kotlin/Any| {
        public constructor(): R|ForConst| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|ForConst.Companion| {
                super<R|kotlin/Any|>()
            }

            public final fun one(): R|kotlin/String| {
                ^one String(1)
            }

            public final fun two(): R|kotlin/Int| {
                ^two Int(2)
            }

        }

    }
    private final const konst MAJOR_BITS: R|kotlin/Int| = Int(3)
        private get(): R|kotlin/Int|
    private final const konst MINOR_BITS: R|kotlin/Int| = Int(4)
        private get(): R|kotlin/Int|
    private final const konst PATCH_BITS: R|kotlin/Int| = Int(7)
        private get(): R|kotlin/Int|
    private final const konst MAJOR_MASK: R|kotlin/Int| = Int(1).R|kotlin/Int.shl|(R|/MAJOR_BITS|).R|kotlin/Int.minus|(Int(1))
        private get(): R|kotlin/Int|
    private final const konst MINOR_MASK: R|kotlin/Int| = Int(1).R|kotlin/Int.shl|(R|/MINOR_BITS|).R|kotlin/Int.minus|(Int(1))
        private get(): R|kotlin/Int|
    private final const konst PATCH_MASK: R|kotlin/Int| = Int(1).R|kotlin/Int.shl|(R|/PATCH_BITS|).R|kotlin/Int.minus|(Int(1))
        private get(): R|kotlin/Int|
    private final const konst stringFromJava: R|kotlin/String| = Q|Constants|.R|/Constants.FIRST|.R|kotlin/String.plus|(String(+)).R|kotlin/String.plus|(Q|Constants|.R|/Constants.SECOND|)
        private get(): R|kotlin/String|
