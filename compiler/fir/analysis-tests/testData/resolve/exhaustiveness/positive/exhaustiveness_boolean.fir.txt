FILE: exhaustiveness_boolean.kt
    public final fun test_1(b: R|kotlin/Boolean|): R|kotlin/Unit| {
        lkonst x: R|kotlin/Unit| = when (R|<local>/b|) {
            ==($subj$, Boolean(true)) ->  {
                Int(1)
            }
        }

        lkonst y: R|kotlin/Int| = when (R|<local>/b|) {
            ==($subj$, Boolean(true)) ->  {
                Int(1)
            }
            ==($subj$, Boolean(false)) ->  {
                Int(2)
            }
        }

        lkonst z: R|kotlin/Int| = when (R|<local>/b|) {
            ==($subj$, Boolean(true)) ->  {
                Int(1)
            }
            else ->  {
                Int(2)
            }
        }

    }
    public final fun test_2(b: R|kotlin/Boolean?|): R|kotlin/Unit| {
        lkonst x: R|kotlin/Unit| = when (R|<local>/b|) {
            ==($subj$, Boolean(true)) ->  {
                Int(1)
            }
            ==($subj$, Boolean(false)) ->  {
                Int(2)
            }
        }

        lkonst y: R|kotlin/Int| = when (R|<local>/b|) {
            ==($subj$, Boolean(true)) ->  {
                Int(1)
            }
            ==($subj$, Boolean(false)) ->  {
                Int(2)
            }
            ==($subj$, Null(null)) ->  {
                Int(3)
            }
        }

    }
