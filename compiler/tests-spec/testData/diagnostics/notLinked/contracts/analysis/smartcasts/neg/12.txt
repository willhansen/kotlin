package

public fun case_1(/*0*/ konstue_1: kotlin.Any?): kotlin.Unit
public fun case_2(/*0*/ konstue_1: kotlin.Any?, /*1*/ konstue_2: kotlin.Number, /*2*/ konstue_3: kotlin.Any?, /*3*/ konstue_4: kotlin.String?): kotlin.Unit

package contracts {
    public fun </*0*/ T> T?.case_1(): kotlin.Unit
        Returns(WILDCARD) -> <this> is Number || <this> is Int

    public inline fun </*0*/ reified T> T?.case_2(/*0*/ konstue_2: kotlin.Number, /*1*/ konstue_3: kotlin.Any?, /*2*/ konstue_4: kotlin.String?): kotlin.Unit
        Returns(WILDCARD) -> (<this> is Number || <this> is Int) && konstue_2 is Int && konstue_3 != null && konstue_3 is Number && konstue_4 != null

}
