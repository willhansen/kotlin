package test

public final annotation class AByte : kotlin.Annotation {
    public constructor AByte(/*0*/ kotlin.Byte)
    public final konst konstue: kotlin.Byte
}

public final annotation class AChar : kotlin.Annotation {
    public constructor AChar(/*0*/ kotlin.Char)
    public final konst konstue: kotlin.Char
}

public final annotation class ADouble : kotlin.Annotation {
    public constructor ADouble(/*0*/ kotlin.Double)
    public final konst konstue: kotlin.Double
}

public final annotation class AFloat : kotlin.Annotation {
    public constructor AFloat(/*0*/ kotlin.Float)
    public final konst konstue: kotlin.Float
}

public final annotation class AInt : kotlin.Annotation {
    public constructor AInt(/*0*/ kotlin.Int)
    public final konst konstue: kotlin.Int
}

public final annotation class ALong : kotlin.Annotation {
    public constructor ALong(/*0*/ kotlin.Long)
    public final konst konstue: kotlin.Long
}

public final annotation class AString : kotlin.Annotation {
    public constructor AString(/*0*/ kotlin.String)
    public final konst konstue: kotlin.String
}

@test.AString(konstue = "Test") @test.AChar(konstue = \u0063 ('c')) @test.AInt(konstue = 10) @test.AByte(konstue = 11) @test.ALong(konstue = 12.toLong()) @test.ADouble(konstue = 1.2.toDouble()) @test.AFloat(konstue = 1.3.toFloat()) public open class AnnotationTrait {
    public constructor AnnotationTrait()
}

public interface Test {

    public companion object Companion {
        private constructor Companion()
        public const final konst vbyte: kotlin.Byte
        public const final konst vchar: kotlin.Char
        public const final konst vdouble: kotlin.Double
        public const final konst vfloat: kotlin.Float
        public const final konst vint: kotlin.Int
        public const final konst vlong: kotlin.Long
        public const final konst vstring: kotlin.String
    }
}
