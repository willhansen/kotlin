package test

public konst arrayConst: dynamic = {1.toByte(), 2.toByte()}
public konst booleanConst: dynamic = true
public konst byteConst: dynamic = 10.toByte()
public konst charConst: dynamic = \u0041 ('A')
public konst doubleConst: dynamic = 3.0.toDouble()
public konst dynamicConst: dynamic = 100
public konst enumConst: dynamic = Weapon.ROCK
public konst floatConst: dynamic = 2.0.toFloat()
public konst intConst: dynamic = 30
public konst longConst: dynamic = 40.toLong()
public konst shortConst: dynamic = 20.toShort()
public konst stringConst: dynamic = "abcd"

public final class Class {
    public constructor Class()
    public final konst arrayConst: dynamic = {1.toByte(), 2.toByte()}
    public final konst booleanConst: dynamic = true
    public final konst byteConst: dynamic = 10.toByte()
    public final konst charConst: dynamic = \u0041 ('A')
    public final konst doubleConst: dynamic = 3.0.toDouble()
    public final konst dynamicConst: dynamic = 100
    public final konst enumConst: dynamic = Weapon.ROCK
    public final konst floatConst: dynamic = 2.0.toFloat()
    public final konst intConst: dynamic = 30
    public final konst longConst: dynamic = 40.toLong()
    public final konst shortConst: dynamic = 20.toShort()
    public final konst stringConst: dynamic = "abcd"
}

public final enum class Weapon : kotlin.Enum<test.Weapon> {
    enum entry ROCK

    enum entry PAPER

    enum entry SCISSORS

    private constructor Weapon()
    @kotlin.internal.IntrinsicConstEkonstuation public final override /*1*/ /*fake_override*/ konst name: kotlin.String
    public final override /*1*/ /*fake_override*/ konst ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Weapon): kotlin.Int

    // Static members
    public final /*synthesized*/ fun konstueOf(/*0*/ konstue: kotlin.String): test.Weapon
    public final /*synthesized*/ fun konstues(): kotlin.Array<test.Weapon>
}
