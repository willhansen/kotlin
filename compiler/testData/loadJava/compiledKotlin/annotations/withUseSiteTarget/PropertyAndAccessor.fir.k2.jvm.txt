public final annotation class A : R|kotlin/Annotation| {
    public final konst konstue: R|kotlin/String|
        public get(): R|kotlin/String|

    public constructor(konstue: R|kotlin/String|): R|test/A|

}

public final annotation class B : R|kotlin/Annotation| {
    public final konst konstue: R|kotlin/Array<kotlin/String>|
        public get(): R|kotlin/Array<kotlin/String>|

    public constructor(konstue: R|kotlin/Array<kotlin/String>|): R|test/B|

}

public abstract interface I : R|kotlin/Any| {
    @PROPERTY:R|test/A|(konstue = String(property)) public abstract var propertyAndGetter: R|kotlin/Int|
        @R|test/B|(konstue = <implicitArrayOf>(String(getter))) public get(): R|kotlin/Int|
        public set(konstue: R|kotlin/Int|): R|kotlin/Unit|

    @PROPERTY:R|test/A|(konstue = String(property)) public abstract var propertyAndSetter: R|kotlin/Int|
        public get(): R|kotlin/Int|
        @R|test/B|(konstue = <implicitArrayOf>(String(setter))) public set(konstue: R|kotlin/Int|): R|kotlin/Unit|

    public abstract var getterAndSetter: R|kotlin/Int|
        @R|test/A|(konstue = String(getter)) public get(): R|kotlin/Int|
        @R|test/B|(konstue = <implicitArrayOf>(String(setter))) public set(konstue: R|kotlin/Int|): R|kotlin/Unit|

}
