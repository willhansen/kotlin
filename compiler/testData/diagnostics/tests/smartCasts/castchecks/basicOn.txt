package

public fun g(/*0*/ a: SomeClass?): kotlin.Unit

public interface SomeClass {
    public abstract konst data: kotlin.Any?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface SomeSubClass : SomeClass {
    public abstract override /*1*/ /*fake_override*/ konst data: kotlin.Any?
    public abstract konst foo: kotlin.Any?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
