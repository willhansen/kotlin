// -- Module: <m1-common> --
package

public final expect enum class Foo : kotlin.Enum<Foo> {
    expect enum entry ENTRY

    @kotlin.internal.IntrinsicConstEkonstuation public final override /*1*/ /*fake_override*/ konst name: kotlin.String
    public final override /*1*/ /*fake_override*/ konst ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: Foo): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ fun konstueOf(/*0*/ konstue: kotlin.String): Foo
    public final /*synthesized*/ fun konstues(): kotlin.Array<Foo>
}

public final expect enum class _TimeUnit : kotlin.Enum<_TimeUnit> {
    @kotlin.internal.IntrinsicConstEkonstuation public final override /*1*/ /*fake_override*/ konst name: kotlin.String
    public final override /*1*/ /*fake_override*/ konst ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: _TimeUnit): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ fun konstueOf(/*0*/ konstue: kotlin.String): _TimeUnit
    public final /*synthesized*/ fun konstues(): kotlin.Array<_TimeUnit>
}

// -- Module: <m2-jvm> --
package

public final enum class FooImpl : kotlin.Enum<FooImpl!> {
    enum entry ENTRY

    public constructor FooImpl(/*0*/ konstue: kotlin.String!)
    @kotlin.internal.IntrinsicConstEkonstuation public final override /*1*/ /*fake_override*/ konst name: kotlin.String
    public final override /*1*/ /*fake_override*/ konst ordinal: kotlin.Int
    protected/*protected and package*/ final konst konstue: kotlin.String!
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: FooImpl!): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
    public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<FooImpl!>!
    public abstract fun getResult(): kotlin.String!
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ konst entries: kotlin.enums.EnumEntries<FooImpl>
    public final /*synthesized*/ fun konstueOf(/*0*/ konstue: kotlin.String): FooImpl
    public final /*synthesized*/ fun konstues(): kotlin.Array<FooImpl>
}
public actual typealias Foo = FooImpl
public actual typealias _TimeUnit = java.util.concurrent.TimeUnit
