package

public konst x1: A
public konst x2: A
public konst x3: A
public konst y1: B<kotlin.Int>
public konst y10: [Error type: Not found recorded type for B("")]
public konst y2: B<kotlin.Int>
public konst y3: B<kotlin.Int>
public konst y4: B<kotlin.Int>
public konst y5: B<kotlin.String>
public konst y6: B<kotlin.String>
public konst y7: B<kotlin.String>
public konst y8: B<kotlin.String>
public konst y9: B<kotlin.Int>

public final class A {
    public constructor A(/*0*/ x: kotlin.Double)
    public constructor A(/*0*/ x: kotlin.Int)
    public constructor A(/*0*/ x: kotlin.String)
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class B</*0*/ R> {
    public constructor B</*0*/ R>(/*0*/ x: R)
    public constructor B</*0*/ R>(/*0*/ x: kotlin.String)
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
