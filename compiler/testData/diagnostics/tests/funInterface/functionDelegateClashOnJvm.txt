package

public fun interface F1 {
    public open konst functionDelegate: kotlin.Function<*>?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract fun invoke(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public fun interface F2 {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun getFunctionDelegate(): kotlin.Function<*>?
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract fun invoke(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public fun interface F3 {
    public open konst getFunctionDelegate: kotlin.Function<*>?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract fun invoke(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public fun interface F4 {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun functionDelegate(): kotlin.Function<*>?
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract fun invoke(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public fun interface F5 {
    public open konst functionDelegate: kotlin.Any?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract fun invoke(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public fun interface F6 {
    public open konst kotlin.String.functionDelegate: kotlin.Function<*>?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun getFunctionDelegate(/*0*/ x: kotlin.Any?): kotlin.Function<*>?
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract fun invoke(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
