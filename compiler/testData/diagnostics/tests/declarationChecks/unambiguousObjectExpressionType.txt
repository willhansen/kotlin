package

internal konst packageInternalProperty: MyClass
private konst packagePrivateProperty: packagePrivateProperty.`<no name provided>`
protected konst packageProtectedProperty: MyClass
public konst packagePublic2Property: MyClass
public konst packagePublicProperty: MyClass
public fun fooPackage(): kotlin.Unit
internal fun internalFunction(): MyClass
private fun privateFunction(): privateFunction.`<no name provided>`
protected fun protectedFunction(): MyClass
public fun public2Function(): MyClass
public fun publicFunction(): MyClass
public fun testFunctions(): kotlin.Unit
public fun testProperties(): kotlin.Unit

public final class Foo {
    public constructor Foo()
    internal final konst internalProperty: MyClass
    private final konst privateProperty: Foo.privateProperty.`<no name provided>`
    protected final konst protected2Property: MyClass
    protected final konst protectedProperty: MyClass
    public final konst public2Property: MyClass
    public final konst publicProperty: MyClass
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    internal final fun internalFunction(): MyClass
    private final fun privateFunction(): Foo.privateFunction.`<no name provided>`
    protected final fun protected2Function(): MyClass
    protected final fun protectedFunction(): MyClass
    public final fun public2Function(): MyClass
    public final fun publicFunction(): MyClass
    public final fun testFunctions(): kotlin.Unit
    public final fun testProperties(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public final class FooInner {
        public constructor FooInner()
        internal final konst internalProperty: MyClass
        private final konst privateProperty: Foo.FooInner.privateProperty.`<no name provided>`
        protected final konst protected2Property: MyClass
        protected final konst protectedProperty: MyClass
        public final konst public2Property: MyClass
        public final konst publicProperty: MyClass
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        internal final fun internalFunction(): MyClass
        private final fun privateFunction(): Foo.FooInner.privateFunction.`<no name provided>`
        protected final fun protected2Function(): MyClass
        protected final fun protectedFunction(): MyClass
        public final fun public2Function(): MyClass
        public final fun publicFunction(): MyClass
        public final fun testFunctions(): kotlin.Unit
        public final fun testProperties(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

public open class MyClass {
    public constructor MyClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun f1(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
