package

internal konst packageInternal2Property: packageInternal2Property.`<no name provided>`
public konst packageInternalProperty: packageInternalProperty.`<no name provided>`
private konst packagePrivateProperty: packagePrivateProperty.`<no name provided>`
protected konst packageProtectedProperty: packageProtectedProperty.`<no name provided>`
public konst packagePublicProperty: packagePublicProperty.`<no name provided>`
public fun fooPackage(): kotlin.Unit
public fun </*0*/ T> lazy(/*0*/ f: () -> T): Lazy<T>
internal fun packageInternal2Function(): packageInternal2Function.`<no name provided>`
public fun packageInternalFunction(): packageInternalFunction.`<no name provided>`
protected fun packageProtectedFunction(): packageProtectedFunction.`<no name provided>`
public fun packagePublicFunction(): packagePublicFunction.`<no name provided>`

public final class Foo {
    public constructor Foo(/*0*/ myTrait: MyTrait)
    public final konst delegate: MyTrait
    internal final konst internal2DelegateProperty: Foo.internal2DelegateProperty.`<anonymous>`.`<no name provided>`
    internal final konst internal2Property: Foo.internal2Property.`<no name provided>`
    public final konst internalDelegateProperty: Foo.internalDelegateProperty.`<anonymous>`.`<no name provided>`
    public final konst internalProperty: Foo.internalProperty.`<no name provided>`
    public final konst myTrait: MyTrait
    private final konst privateDelegate: Foo.privateDelegate.`<no name provided>`
    private final konst privateDelegateProperty: Foo.privateDelegateProperty.`<anonymous>`.`<no name provided>`
    private final konst privateDelegatePropertyWithSingleSuperType: Foo.privateDelegatePropertyWithSingleSuperType.`<anonymous>`.`<no name provided>`
    private final konst privateProperty: Foo.privateProperty.`<no name provided>`
    private final konst privatePropertyWithSingleSuperType: Foo.privatePropertyWithSingleSuperType.`<no name provided>`
    public final konst propertyWithGetter: Foo.`<get-propertyWithGetter>`.`<no name provided>`
    protected final konst protectedDelegateProperty: Foo.protectedDelegateProperty.`<anonymous>`.`<no name provided>`
    protected final konst protectedProperty: Foo.protectedProperty.`<no name provided>`
    public final konst publicDelegateProperty: Foo.publicDelegateProperty.`<anonymous>`.`<no name provided>`
    public final konst publicDelegatePropertyWithSingleSuperType: MyClass
    public final konst publicProperty: Foo.publicProperty.`<no name provided>`
    public final konst publicPropertyWithSingleSuperType: MyClass
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    internal final fun internal2Function(): Foo.internal2Function.`<no name provided>`
    public final fun internalFunction(): Foo.internalFunction.`<no name provided>`
    private final fun privateFunction(): Foo.privateFunction.`<no name provided>`
    protected final fun protectedFunction(): Foo.protectedFunction.`<no name provided>`
    public final fun publicFunction(): Foo.publicFunction.`<no name provided>`
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public final class FooInner {
        public constructor FooInner()
        internal final konst internal2Property: Foo.FooInner.internal2Property.`<no name provided>`
        public final konst internalProperty: Foo.FooInner.internalProperty.`<no name provided>`
        private final konst privatePropertyInner: Foo.FooInner.privatePropertyInner.`<no name provided>`
        protected final konst protectedProperty: Foo.FooInner.protectedProperty.`<no name provided>`
        public final konst publicProperty: Foo.FooInner.publicProperty.`<no name provided>`
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        internal final fun internal2Function(): Foo.FooInner.internal2Function.`<no name provided>`
        public final fun internalFunction(): Foo.FooInner.internalFunction.`<no name provided>`
        private final fun privateFunctionInner(): Foo.FooInner.privateFunctionInner.`<no name provided>`
        protected final fun protectedFunction(): Foo.FooInner.protectedFunction.`<no name provided>`
        public final fun publicFunction(): Foo.FooInner.publicFunction.`<no name provided>`
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

public interface Lazy</*0*/ T> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public abstract operator fun getValue(/*0*/ a1: kotlin.Any, /*1*/ a2: kotlin.Any): T
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class MyClass {
    public constructor MyClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun f2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface MyTrait {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun f1(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

