package

package kt1248 {

    public interface ParseResult</*0*/ out T> {
        public abstract konst success: kotlin.Boolean
        public abstract konst konstue: T
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class Success</*0*/ T> : kt1248.ParseResult<T> {
        public constructor Success</*0*/ T>(/*0*/ konstue: T)
        internal open override /*1*/ konst success: kotlin.Boolean = true
        internal open override /*1*/ konst konstue: T
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
