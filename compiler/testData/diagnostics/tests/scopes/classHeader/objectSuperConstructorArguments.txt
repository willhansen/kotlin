package

public object A : S {
    private constructor A()
    public final override /*1*/ /*fake_override*/ konst a: kotlin.Any
    public final override /*1*/ /*fake_override*/ konst b: kotlin.Any
    public final override /*1*/ /*fake_override*/ konst c: kotlin.Any
    public final konst prop1: kotlin.Int = 1
    public final konst prop2: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun func(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class S {
    public constructor S(/*0*/ a: kotlin.Any, /*1*/ b: kotlin.Any, /*2*/ c: kotlin.Any)
    public final konst a: kotlin.Any
    public final konst b: kotlin.Any
    public final konst c: kotlin.Any
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
