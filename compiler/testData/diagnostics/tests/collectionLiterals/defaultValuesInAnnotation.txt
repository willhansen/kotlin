package

public final annotation class Bar : kotlin.Annotation {
    public constructor Bar(/*0*/ a: kotlin.Array<kotlin.String> = ..., /*1*/ b: kotlin.Array<kotlin.String> = ..., /*2*/ c: kotlin.Array<kotlin.String> = ...)
    public final konst a: kotlin.Array<kotlin.String>
    public final konst b: kotlin.Array<kotlin.String>
    public final konst c: kotlin.Array<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class Base : kotlin.Annotation {
    public constructor Base(/*0*/ a0: kotlin.IntArray = ..., /*1*/ a1: kotlin.IntArray = ..., /*2*/ b1: kotlin.FloatArray = ..., /*3*/ b0: kotlin.FloatArray = ...)
    public final konst a0: kotlin.IntArray
    public final konst a1: kotlin.IntArray
    public final konst b0: kotlin.FloatArray
    public final konst b1: kotlin.FloatArray
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class Err : kotlin.Annotation {
    public constructor Err(/*0*/ a: kotlin.IntArray = ..., /*1*/ b: kotlin.Array<kotlin.String> = ...)
    public final konst a: kotlin.IntArray
    public final konst b: kotlin.Array<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class Foo : kotlin.Annotation {
    public constructor Foo(/*0*/ a: kotlin.Array<kotlin.String> = ..., /*1*/ b: kotlin.Array<kotlin.String> = ..., /*2*/ c: kotlin.Array<kotlin.String> = ...)
    public final konst a: kotlin.Array<kotlin.String>
    public final konst b: kotlin.Array<kotlin.String>
    public final konst c: kotlin.Array<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
