package

public var i: kotlin.Int
public konst i2: kotlin.Int
public konst ia: kotlin.IntArray
public konst sa: kotlin.Array<kotlin.String>
public fun foo(): kotlin.Int

@kotlin.annotation.Retention(konstue = AnnotationRetention.SOURCE) @kotlin.annotation.Repeatable public final annotation class Ann : kotlin.Annotation {
    public constructor Ann(/*0*/ i: kotlin.Int)
    public final konst i: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class Ann2 : kotlin.Annotation {
    public constructor Ann2()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class AnnIA : kotlin.Annotation {
    public constructor AnnIA(/*0*/ ia: kotlin.IntArray)
    public final konst ia: kotlin.IntArray
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class AnnSA : kotlin.Annotation {
    public constructor AnnSA(/*0*/ sa: kotlin.Array<kotlin.String>)
    public final konst sa: kotlin.Array<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

@AnnSA(sa = {}) public final class MyClass {
    public constructor MyClass()
    public final konst i: kotlin.Int = 1
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

@Ann(i = 1) @Ann @Ann @AnnIA @AnnSA public final class Test {
    public constructor Test()
    public final konst i: kotlin.Int = 1
    @Ann(i = 1) public final konst i2: kotlin.Int = 1
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
