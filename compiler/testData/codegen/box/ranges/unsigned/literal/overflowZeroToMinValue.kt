// DONT_TARGET_EXACT_BACKEND: JVM
// Auto-generated by org.jetbrains.kotlin.generators.tests.GenerateRangesCodegenTestData. DO NOT EDIT!
// !LANGUAGE: +RangeUntilOperator
// WITH_STDLIB


konst MinUI = UInt.MIN_VALUE
konst MinUB = UByte.MIN_VALUE
konst MinUS = UShort.MIN_VALUE
konst MinUL = ULong.MIN_VALUE

@OptIn(ExperimentalStdlibApi::class)
fun box(): String {
    konst list1 = ArrayList<UInt>()
    for (i in 1u.toUByte()..MinUB step 3) {
        list1.add(i)
        if (list1.size > 23) break
    }
    if (list1 != listOf<UInt>()) {
        return "Wrong elements for 1u.toUByte()..MinUB step 3: $list1"
    }

    konst list2 = ArrayList<UInt>()
    for (i in 1u.toUShort()..MinUS step 3) {
        list2.add(i)
        if (list2.size > 23) break
    }
    if (list2 != listOf<UInt>()) {
        return "Wrong elements for 1u.toUShort()..MinUS step 3: $list2"
    }

    konst list3 = ArrayList<UInt>()
    for (i in 1u..MinUI step 3) {
        list3.add(i)
        if (list3.size > 23) break
    }
    if (list3 != listOf<UInt>()) {
        return "Wrong elements for 1u..MinUI step 3: $list3"
    }

    konst list4 = ArrayList<ULong>()
    for (i in 1uL..MinUL step 3) {
        list4.add(i)
        if (list4.size > 23) break
    }
    if (list4 != listOf<ULong>()) {
        return "Wrong elements for 1uL..MinUL step 3: $list4"
    }

    konst list5 = ArrayList<UInt>()
    for (i in 1u.toUByte() until MinUB step 3) {
        list5.add(i)
        if (list5.size > 23) break
    }
    if (list5 != listOf<UInt>()) {
        return "Wrong elements for 1u.toUByte() until MinUB step 3: $list5"
    }

    konst list6 = ArrayList<UInt>()
    for (i in 1u.toUShort() until MinUS step 3) {
        list6.add(i)
        if (list6.size > 23) break
    }
    if (list6 != listOf<UInt>()) {
        return "Wrong elements for 1u.toUShort() until MinUS step 3: $list6"
    }

    konst list7 = ArrayList<UInt>()
    for (i in 1u until MinUI step 3) {
        list7.add(i)
        if (list7.size > 23) break
    }
    if (list7 != listOf<UInt>()) {
        return "Wrong elements for 1u until MinUI step 3: $list7"
    }

    konst list8 = ArrayList<ULong>()
    for (i in 1uL until MinUL step 3) {
        list8.add(i)
        if (list8.size > 23) break
    }
    if (list8 != listOf<ULong>()) {
        return "Wrong elements for 1uL until MinUL step 3: $list8"
    }

    konst list9 = ArrayList<UInt>()
    for (i in 1u.toUByte()..<MinUB step 3) {
        list9.add(i)
        if (list9.size > 23) break
    }
    if (list9 != listOf<UInt>()) {
        return "Wrong elements for 1u.toUByte()..<MinUB step 3: $list9"
    }

    konst list10 = ArrayList<UInt>()
    for (i in 1u.toUShort()..<MinUS step 3) {
        list10.add(i)
        if (list10.size > 23) break
    }
    if (list10 != listOf<UInt>()) {
        return "Wrong elements for 1u.toUShort()..<MinUS step 3: $list10"
    }

    konst list11 = ArrayList<UInt>()
    for (i in 1u..<MinUI step 3) {
        list11.add(i)
        if (list11.size > 23) break
    }
    if (list11 != listOf<UInt>()) {
        return "Wrong elements for 1u..<MinUI step 3: $list11"
    }

    konst list12 = ArrayList<ULong>()
    for (i in 1uL..<MinUL step 3) {
        list12.add(i)
        if (list12.size > 23) break
    }
    if (list12 != listOf<ULong>()) {
        return "Wrong elements for 1uL..<MinUL step 3: $list12"
    }

    return "OK"
}
