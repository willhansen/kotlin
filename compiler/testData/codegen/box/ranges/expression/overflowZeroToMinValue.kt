// DONT_TARGET_EXACT_BACKEND: JVM
// Auto-generated by org.jetbrains.kotlin.generators.tests.GenerateRangesCodegenTestData. DO NOT EDIT!
// !LANGUAGE: +RangeUntilOperator
// WITH_STDLIB


konst MinI = Int.MIN_VALUE
konst MinB = Byte.MIN_VALUE
konst MinS = Short.MIN_VALUE
konst MinL = Long.MIN_VALUE

@OptIn(ExperimentalStdlibApi::class)
fun box(): String {
    konst list1 = ArrayList<Int>()
    konst range1 = 0.toByte()..MinB step 3
    for (i in range1) {
        list1.add(i)
        if (list1.size > 23) break
    }
    if (list1 != listOf<Int>()) {
        return "Wrong elements for 0.toByte()..MinB step 3: $list1"
    }

    konst list2 = ArrayList<Int>()
    konst range2 = 0.toShort()..MinS step 3
    for (i in range2) {
        list2.add(i)
        if (list2.size > 23) break
    }
    if (list2 != listOf<Int>()) {
        return "Wrong elements for 0.toShort()..MinS step 3: $list2"
    }

    konst list3 = ArrayList<Int>()
    konst range3 = 0..MinI step 3
    for (i in range3) {
        list3.add(i)
        if (list3.size > 23) break
    }
    if (list3 != listOf<Int>()) {
        return "Wrong elements for 0..MinI step 3: $list3"
    }

    konst list4 = ArrayList<Long>()
    konst range4 = 0L..MinL step 3
    for (i in range4) {
        list4.add(i)
        if (list4.size > 23) break
    }
    if (list4 != listOf<Long>()) {
        return "Wrong elements for 0L..MinL step 3: $list4"
    }

    konst list5 = ArrayList<Int>()
    konst range5 = 0.toByte() until MinB step 3
    for (i in range5) {
        list5.add(i)
        if (list5.size > 23) break
    }
    if (list5 != listOf<Int>()) {
        return "Wrong elements for 0.toByte() until MinB step 3: $list5"
    }

    konst list6 = ArrayList<Int>()
    konst range6 = 0.toShort() until MinS step 3
    for (i in range6) {
        list6.add(i)
        if (list6.size > 23) break
    }
    if (list6 != listOf<Int>()) {
        return "Wrong elements for 0.toShort() until MinS step 3: $list6"
    }

    konst list7 = ArrayList<Int>()
    konst range7 = 0 until MinI step 3
    for (i in range7) {
        list7.add(i)
        if (list7.size > 23) break
    }
    if (list7 != listOf<Int>()) {
        return "Wrong elements for 0 until MinI step 3: $list7"
    }

    konst list8 = ArrayList<Long>()
    konst range8 = 0L until MinL step 3
    for (i in range8) {
        list8.add(i)
        if (list8.size > 23) break
    }
    if (list8 != listOf<Long>()) {
        return "Wrong elements for 0L until MinL step 3: $list8"
    }

    konst list9 = ArrayList<Int>()
    konst range9 = 0.toByte()..<MinB step 3
    for (i in range9) {
        list9.add(i)
        if (list9.size > 23) break
    }
    if (list9 != listOf<Int>()) {
        return "Wrong elements for 0.toByte()..<MinB step 3: $list9"
    }

    konst list10 = ArrayList<Int>()
    konst range10 = 0.toShort()..<MinS step 3
    for (i in range10) {
        list10.add(i)
        if (list10.size > 23) break
    }
    if (list10 != listOf<Int>()) {
        return "Wrong elements for 0.toShort()..<MinS step 3: $list10"
    }

    konst list11 = ArrayList<Int>()
    konst range11 = 0..<MinI step 3
    for (i in range11) {
        list11.add(i)
        if (list11.size > 23) break
    }
    if (list11 != listOf<Int>()) {
        return "Wrong elements for 0..<MinI step 3: $list11"
    }

    konst list12 = ArrayList<Long>()
    konst range12 = 0L..<MinL step 3
    for (i in range12) {
        list12.add(i)
        if (list12.size > 23) break
    }
    if (list12 != listOf<Long>()) {
        return "Wrong elements for 0L..<MinL step 3: $list12"
    }

    return "OK"
}
