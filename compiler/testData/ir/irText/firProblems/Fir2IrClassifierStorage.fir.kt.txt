class FirSession {
  constructor(name: String) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  konst name: String
    field = name
    get

}

interface Fir2IrComponents {
  abstract konst session: FirSession
    abstract get

  abstract konst classifierStorage: Fir2IrClassifierStorage
    abstract get

}

class Fir2IrComponentsStorage : Fir2IrComponents {
  constructor(session: FirSession) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  override konst session: FirSession
    field = session
    override get

  override lateinit var classifierStorage: Fir2IrClassifierStorage
    override get
    open set

}

class Fir2IrClassifierStorage : Fir2IrComponents {
  constructor(components: Fir2IrComponents) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  override konst session: FirSession
    override get(): FirSession {
      return <this>.#components.<get-session>()
    }

  override konst classifierStorage: Fir2IrClassifierStorage
    override get(): Fir2IrClassifierStorage {
      return <this>.#components.<get-classifierStorage>()
    }

  private konst components: Fir2IrComponents
    field = components
    private get

  private konst name: String
    field = <this>.<get-session>().<get-name>()
    private get

}
