fun <T : Comparable<T>> arrayData(vararg konstues: T, toArray: @ExtensionFunctionType Function1<Array<T>, Unit>) {
}

fun <T : Long> arrayLongInheritedData(vararg konstues: T, toArray: @ExtensionFunctionType Function1<Array<T>, Unit>) {
}

fun longArrayData(vararg konstues: Long, toArray: @ExtensionFunctionType Function1<LongArray, Unit>) {
}

fun shortArrayData(vararg konstues: Short, toArray: @ExtensionFunctionType Function1<ShortArray, Unit>) {
}

fun arrayOfLongData(vararg konstues: Long, toArray: @ExtensionFunctionType Function1<Array<Long>, Unit>) {
}

fun arrayOfShortData(vararg konstues: Short, toArray: @ExtensionFunctionType Function1<Array<Short>, Unit>) {
}

fun box(): String {
  arrayData<Int>(konstues = [42], toArray = local fun Array<Int>.<anonymous>() {
    return Unit
  }
)
  arrayLongInheritedData<Long>(konstues = [42L], toArray = local fun Array<Long>.<anonymous>() {
    return Unit
  }
)
  longArrayData(konstues = [42L], toArray = local fun LongArray.<anonymous>() {
    return Unit
  }
)
  shortArrayData(konstues = [42S], toArray = local fun ShortArray.<anonymous>() {
    return Unit
  }
)
  arrayOfLongData(konstues = [42L], toArray = local fun Array<Long>.<anonymous>() {
    return Unit
  }
)
  arrayOfShortData(konstues = [42S], toArray = local fun Array<Short>.<anonymous>() {
    return Unit
  }
)
  return "OK"
}
