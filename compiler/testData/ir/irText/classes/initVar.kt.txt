class TestInitVarFromParameter {
  constructor(x: Int) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  var x: Int
    field = x
    get
    set

}

class TestInitVarInClass {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  var x: Int
    field = 0
    get
    set

}

class TestInitVarInInitBlock {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  var x: Int
    get
    set

  init {
    <this>.<set-x>(<set-?> = 0)
  }

}

class TestInitVarWithCustomSetter {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  var x: Int
    field = 0
    get
    set(konstue: Int) {
      <this>.#x = konstue
    }

}

