open class Base {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  open fun foo() {
  }

  open konst bar: String
    field = ""
    open get

}

interface BaseI {
  abstract fun foo()

  abstract konst bar: String
    abstract get

}

class Derived : Base, BaseI {
  constructor() /* primary */ {
    super/*Base*/()
    /* <init>() */

  }

  override fun foo() {
    super<Base>.foo()
  }

  override konst bar: String
    override get(): String {
      return super<Base>.<get-bar>()
    }

}

