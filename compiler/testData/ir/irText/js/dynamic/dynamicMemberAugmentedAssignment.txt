FILE fqName:<root> fileName:/dynamicMemberAugmentedAssignment.kt
  FUN name:testAugmentedMemberAssignment visibility:public modality:FINAL <> (d:dynamic) returnType:kotlin.Unit
    VALUE_PARAMETER name:d index:0 type:dynamic
    BLOCK_BODY
      DYN_OP operator=PLUSEQ type=kotlin.Unit
        receiver: DYN_MEMBER memberName='m' type=dynamic
          GET_VAR 'd: dynamic declared in <root>.testAugmentedMemberAssignment' type=dynamic origin=null
        0: CONST String type=kotlin.String konstue="+="
      DYN_OP operator=MINUSEQ type=kotlin.Unit
        receiver: DYN_MEMBER memberName='m' type=dynamic
          GET_VAR 'd: dynamic declared in <root>.testAugmentedMemberAssignment' type=dynamic origin=null
        0: CONST String type=kotlin.String konstue="-="
      DYN_OP operator=MULEQ type=kotlin.Unit
        receiver: DYN_MEMBER memberName='m' type=dynamic
          GET_VAR 'd: dynamic declared in <root>.testAugmentedMemberAssignment' type=dynamic origin=null
        0: CONST String type=kotlin.String konstue="*="
      DYN_OP operator=DIVEQ type=kotlin.Unit
        receiver: DYN_MEMBER memberName='m' type=dynamic
          GET_VAR 'd: dynamic declared in <root>.testAugmentedMemberAssignment' type=dynamic origin=null
        0: CONST String type=kotlin.String konstue="/="
      DYN_OP operator=MODEQ type=kotlin.Unit
        receiver: DYN_MEMBER memberName='m' type=dynamic
          GET_VAR 'd: dynamic declared in <root>.testAugmentedMemberAssignment' type=dynamic origin=null
        0: CONST String type=kotlin.String konstue="%="
  FUN name:testSafeAugmentedMemberAssignment visibility:public modality:FINAL <> (d:dynamic) returnType:kotlin.Unit
    VALUE_PARAMETER name:d index:0 type:dynamic
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:dynamic [konst]
          GET_VAR 'd: dynamic declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'konst tmp_0: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              arg1: CONST Null type=kotlin.Nothing? konstue=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CONST Null type=kotlin.Nothing? konstue=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean konstue=true
            then: DYN_OP operator=PLUSEQ type=kotlin.Unit
              receiver: DYN_MEMBER memberName='m' type=dynamic
                GET_VAR 'konst tmp_0: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              0: CONST String type=kotlin.String konstue="+="
      BLOCK type=kotlin.Unit origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:dynamic [konst]
          GET_VAR 'd: dynamic declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'konst tmp_1: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              arg1: CONST Null type=kotlin.Nothing? konstue=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CONST Null type=kotlin.Nothing? konstue=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean konstue=true
            then: DYN_OP operator=MINUSEQ type=kotlin.Unit
              receiver: DYN_MEMBER memberName='m' type=dynamic
                GET_VAR 'konst tmp_1: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              0: CONST String type=kotlin.String konstue="-="
      BLOCK type=kotlin.Unit origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:dynamic [konst]
          GET_VAR 'd: dynamic declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'konst tmp_2: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              arg1: CONST Null type=kotlin.Nothing? konstue=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CONST Null type=kotlin.Nothing? konstue=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean konstue=true
            then: DYN_OP operator=MULEQ type=kotlin.Unit
              receiver: DYN_MEMBER memberName='m' type=dynamic
                GET_VAR 'konst tmp_2: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              0: CONST String type=kotlin.String konstue="*="
      BLOCK type=kotlin.Unit origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:dynamic [konst]
          GET_VAR 'd: dynamic declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'konst tmp_3: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              arg1: CONST Null type=kotlin.Nothing? konstue=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CONST Null type=kotlin.Nothing? konstue=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean konstue=true
            then: DYN_OP operator=DIVEQ type=kotlin.Unit
              receiver: DYN_MEMBER memberName='m' type=dynamic
                GET_VAR 'konst tmp_3: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              0: CONST String type=kotlin.String konstue="/="
      BLOCK type=kotlin.Unit origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:dynamic [konst]
          GET_VAR 'd: dynamic declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'konst tmp_4: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              arg1: CONST Null type=kotlin.Nothing? konstue=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CONST Null type=kotlin.Nothing? konstue=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean konstue=true
            then: DYN_OP operator=MODEQ type=kotlin.Unit
              receiver: DYN_MEMBER memberName='m' type=dynamic
                GET_VAR 'konst tmp_4: dynamic [konst] declared in <root>.testSafeAugmentedMemberAssignment' type=dynamic origin=null
              0: CONST String type=kotlin.String konstue="%="
