class MyClass {
  constructor(konstue: String) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  konst konstue: String
    field = konstue
    get

}

operator fun MyClass.provideDelegate(host: Any?, p: Any): String {
  return <this>.<get-konstue>()
}

operator fun String.getValue(receiver: Any?, p: Any): String {
  return <this>
}

konst testO: String /* by */
  field = MyClass(konstue = "O").provideDelegate(host = null, p = ::testO)
  get(): String {
    return #testO$delegate.getValue(receiver = null, p = ::testO)
  }

konst testK: String /* by */
  field = "K"
  get(): String {
    return #testK$delegate.getValue(receiver = null, p = ::testK)
  }

konst testOK: String
  field = <get-testO>().plus(other = <get-testK>())
  get
