fun foo(): IntArray {
  return intArrayOf(elements = [1, 2, 3])
}

fun bar(): Int {
  return 42
}

class C {
  constructor(x: IntArray) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  konst x: IntArray
    field = x
    get

}

fun testVariable() {
  var x: IntArray = foo()
  { // BLOCK
    konst <array>: IntArray = x
    konst <index_0>: Int = 0
    <array>.set(index = <index_0>, konstue = <array>.get(index = <index_0>).plus(other = 1))
  }
}

fun testCall() {
  { // BLOCK
    konst <array>: IntArray = foo()
    konst <index_0>: Int = bar()
    <array>.set(index = <index_0>, konstue = <array>.get(index = <index_0>).times(other = 2))
  }
}

fun testMember(c: C) {
  konst <array>: IntArray = c.<get-x>()
  konst <index_0>: Int = 0
  konst <unary>: Int = <array>.get(index = <index_0>)
  <array>.set(index = <index_0>, konstue = <unary>.inc())
  <unary> /*~> Unit */
}
