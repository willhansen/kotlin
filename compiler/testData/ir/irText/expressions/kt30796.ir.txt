FILE fqName:<root> fileName:/kt30796.kt
  FUN name:magic visibility:public modality:FINAL <T> () returnType:T of <root>.magic
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    BLOCK_BODY
      THROW type=kotlin.Nothing
        CONSTRUCTOR_CALL 'public constructor <init> () declared in java.lang.Exception' type=java.lang.Exception origin=null
  FUN name:test visibility:public modality:FINAL <T> (konstue:T of <root>.test, konstue2:T of <root>.test) returnType:kotlin.Unit
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    VALUE_PARAMETER name:konstue index:0 type:T of <root>.test
    VALUE_PARAMETER name:konstue2 index:1 type:T of <root>.test
    BLOCK_BODY
      VAR name:x1 type:kotlin.Any [konst]
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:T of <root>.test [konst]
            GET_VAR 'konstue: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'konst tmp_0: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                arg1: CONST Null type=kotlin.Nothing? konstue=null
              then: CONST Int type=kotlin.Int konstue=42
            BRANCH
              if: CONST Boolean type=kotlin.Boolean konstue=true
              then: GET_VAR 'konst tmp_0: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
      VAR name:x2 type:kotlin.Any [konst]
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:T of <root>.test [konst]
            GET_VAR 'konstue: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'konst tmp_1: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                arg1: CONST Null type=kotlin.Nothing? konstue=null
              then: BLOCK type=kotlin.Any origin=ELVIS
                VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:T of <root>.test [konst]
                  GET_VAR 'konstue2: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                WHEN type=kotlin.Any origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'konst tmp_2: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                      arg1: CONST Null type=kotlin.Nothing? konstue=null
                    then: CONST Int type=kotlin.Int konstue=42
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean konstue=true
                    then: GET_VAR 'konst tmp_2: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean konstue=true
              then: GET_VAR 'konst tmp_1: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
      VAR name:x3 type:kotlin.Any [konst]
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:T of <root>.test [konst]
            BLOCK type=T of <root>.test origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:T of <root>.test [konst]
                GET_VAR 'konstue: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
              WHEN type=T of <root>.test origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'konst tmp_4: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                    arg1: CONST Null type=kotlin.Nothing? konstue=null
                  then: GET_VAR 'konstue2: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean konstue=true
                  then: GET_VAR 'konst tmp_4: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'konst tmp_3: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                arg1: CONST Null type=kotlin.Nothing? konstue=null
              then: CONST Int type=kotlin.Int konstue=42
            BRANCH
              if: CONST Boolean type=kotlin.Boolean konstue=true
              then: GET_VAR 'konst tmp_3: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
      VAR name:x4 type:kotlin.Any [konst]
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp_5 type:T of <root>.test [konst]
            BLOCK type=T of <root>.test origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp_6 type:T of <root>.test [konst]
                GET_VAR 'konstue: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
              WHEN type=T of <root>.test origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'konst tmp_6: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                    arg1: CONST Null type=kotlin.Nothing? konstue=null
                  then: GET_VAR 'konstue2: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean konstue=true
                  then: GET_VAR 'konst tmp_6: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'konst tmp_5: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                arg1: CONST Null type=kotlin.Nothing? konstue=null
              then: CONST Int type=kotlin.Int konstue=42
            BRANCH
              if: CONST Boolean type=kotlin.Boolean konstue=true
              then: GET_VAR 'konst tmp_5: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
      VAR name:x5 type:kotlin.Any [konst]
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp_7 type:kotlin.Any? [konst]
            CALL 'public final fun magic <T> (): T of <root>.magic declared in <root>' type=kotlin.Any? origin=null
              <T>: kotlin.Any?
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'konst tmp_7: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? konstue=null
              then: CONST Int type=kotlin.Int konstue=42
            BRANCH
              if: CONST Boolean type=kotlin.Boolean konstue=true
              then: GET_VAR 'konst tmp_7: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
      VAR name:x6 type:kotlin.Any [konst]
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp_8 type:kotlin.Any? [konst]
            BLOCK type=kotlin.Any? origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp_9 type:T of <root>.test [konst]
                GET_VAR 'konstue: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
              WHEN type=kotlin.Any? origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'konst tmp_9: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                    arg1: CONST Null type=kotlin.Nothing? konstue=null
                  then: CALL 'public final fun magic <T> (): T of <root>.magic declared in <root>' type=kotlin.Any? origin=null
                    <T>: kotlin.Any?
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean konstue=true
                  then: GET_VAR 'konst tmp_9: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'konst tmp_8: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? konstue=null
              then: CONST Int type=kotlin.Int konstue=42
            BRANCH
              if: CONST Boolean type=kotlin.Boolean konstue=true
              then: GET_VAR 'konst tmp_8: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
      VAR name:x7 type:kotlin.Any [konst]
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp_10 type:kotlin.Any? [konst]
            BLOCK type=kotlin.Any? origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp_11 type:kotlin.Any? [konst]
                CALL 'public final fun magic <T> (): T of <root>.magic declared in <root>' type=kotlin.Any? origin=null
                  <T>: kotlin.Any?
              WHEN type=kotlin.Any? origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'konst tmp_11: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
                    arg1: CONST Null type=kotlin.Nothing? konstue=null
                  then: GET_VAR 'konstue: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean konstue=true
                  then: GET_VAR 'konst tmp_11: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'konst tmp_10: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? konstue=null
              then: CONST Int type=kotlin.Int konstue=42
            BRANCH
              if: CONST Boolean type=kotlin.Boolean konstue=true
              then: GET_VAR 'konst tmp_10: kotlin.Any? declared in <root>.test' type=kotlin.Any? origin=null
