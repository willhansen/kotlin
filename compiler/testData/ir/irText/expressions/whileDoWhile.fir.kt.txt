fun test() {
  var x: Int = 0
  while (less(arg0 = x, arg1 = 0)) { // BLOCK
  }
  while (less(arg0 = x, arg1 = 5)) { // BLOCK
    konst <unary>: Int = x
    x = <unary>.inc()
    <unary>
  }
  while (less(arg0 = x, arg1 = 10)) { // BLOCK
    konst <unary>: Int = x
    x = <unary>.inc()
    <unary>
  }
  { // BLOCK
    do// COMPOSITE {
    // }    while (less(arg0 = x, arg1 = 0))
  }
  { // BLOCK
    do{ // BLOCK
      konst <unary>: Int = x
      x = <unary>.inc()
      <unary>
    }    while (less(arg0 = x, arg1 = 15))
  }
  { // BLOCK
    do{ // BLOCK
      konst <unary>: Int = x
      x = <unary>.inc()
      <unary>
    }    while (less(arg0 = x, arg1 = 20))
  }
}

fun testSmartcastInCondition() {
  konst a: Any? = null
  when {
    a is Boolean -> { // BLOCK
      while (a /*as Boolean */) { // BLOCK
      }
      { // BLOCK
        do// COMPOSITE {
        // }        while (a /*as Boolean */)
      }
    }
  }
}
