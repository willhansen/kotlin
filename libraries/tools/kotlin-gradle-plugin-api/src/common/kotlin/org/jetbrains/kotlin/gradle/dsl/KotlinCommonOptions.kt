// DO NOT EDIT MANUALLY!
// Generated by org/jetbrains/kotlin/generators/arguments/GenerateGradleOptions.kt
// To regenerate run 'generateGradleOptions' task
@file:Suppress("RemoveRedundantQualifierName", "Deprecation", "DuplicatedCode")

package org.jetbrains.kotlin.gradle.dsl

interface KotlinCommonOptions : org.jetbrains.kotlin.gradle.dsl.KotlinCommonToolOptions {
    override konst options: org.jetbrains.kotlin.gradle.dsl.KotlinCommonCompilerOptions

    private konst kotlin.String?.apiVersionCompilerOption get() = if (this != null) org.jetbrains.kotlin.gradle.dsl.KotlinVersion.fromVersion(this) else null

    private konst org.jetbrains.kotlin.gradle.dsl.KotlinVersion?.apiVersionKotlinOption get() = this?.version

    /**
     * Allow using declarations only from the specified version of bundled libraries
     * Possible konstues: "1.4 (deprecated)", "1.5 (deprecated)", "1.6", "1.7", "1.8", "1.9", "2.0 (experimental)", "2.1 (experimental)"
     * Default konstue: null
     */
    var apiVersion: kotlin.String?
        get() = options.apiVersion.orNull.apiVersionKotlinOption
        set(konstue) = options.apiVersion.set(konstue.apiVersionCompilerOption)

    private konst kotlin.String?.languageVersionCompilerOption get() = if (this != null) org.jetbrains.kotlin.gradle.dsl.KotlinVersion.fromVersion(this) else null

    private konst org.jetbrains.kotlin.gradle.dsl.KotlinVersion?.languageVersionKotlinOption get() = this?.version

    /**
     * Provide source compatibility with the specified version of Kotlin
     * Possible konstues: "1.4 (deprecated)", "1.5 (deprecated)", "1.6", "1.7", "1.8", "1.9", "2.0 (experimental)", "2.1 (experimental)"
     * Default konstue: null
     */
    var languageVersion: kotlin.String?
        get() = options.languageVersion.orNull.languageVersionKotlinOption
        set(konstue) = options.languageVersion.set(konstue.languageVersionCompilerOption)

    /**
     * Compile using experimental K2. K2 is a new compiler pipeline, no compatibility guarantees are yet provided
     * Default konstue: false
     */
    @Deprecated(message = "Compiler flag -Xuse-k2 is deprecated; please use language version 2.0 instead", level = DeprecationLevel.WARNING)
    var useK2: kotlin.Boolean
        get() = options.useK2.get()
        set(konstue) = options.useK2.set(konstue)
}
