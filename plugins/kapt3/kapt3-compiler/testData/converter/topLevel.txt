package test.another;

@java.lang.annotation.Retention(konstue = java.lang.annotation.RetentionPolicy.RUNTIME)
@kotlin.Metadata()
public abstract @interface Anno {

    public abstract java.lang.String konstue();
}

////////////////////

package test.another;

@kotlin.Metadata()
public final class TopLevelKt {

    public TopLevelKt() {
        super();
    }
    private static final int topLevelProperty = 2;
    public static final int topLevelConstProperty = 2;

    @org.jetbrains.annotations.Nullable()
    public static final java.lang.String topLevelFunction() {
        return null;
    }

    @org.jetbrains.annotations.Nullable()
    public static final <X extends java.lang.CharSequence, T extends java.util.List<? extends X>>T topLevelGenericFunction() {
        return null;
    }

    public static final int getTopLevelProperty() {
        return 0;
    }

    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String getTopLevelProperty2() {
        return null;
    }

    public static final void extensionFunction(@Anno(konstue = "rec")
    @org.jetbrains.annotations.NotNull()
    java.lang.String $this$extensionFunction, @Anno(konstue = "1")
    @org.jetbrains.annotations.NotNull()
    java.lang.String a, @Anno(konstue = "2")
    @org.jetbrains.annotations.NotNull()
    java.lang.String b) {
    }

    @Anno(konstue = "extpr")
    @java.lang.Deprecated()
    public static void getExtensionProperty$annotations(java.lang.Object p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public static final <T extends java.lang.Object>java.lang.String getExtensionProperty(@Anno(konstue = "propRec")
    @org.jetbrains.annotations.NotNull()
    T $this$extensionProperty) {
        return null;
    }

    public static final <T extends java.lang.Object>void setExtensionProperty(@Anno(konstue = "propRec")
    @org.jetbrains.annotations.NotNull()
    T $this$extensionProperty, @Anno(konstue = "setparam")
    @org.jetbrains.annotations.NotNull()
    java.lang.String setParamName) {
    }
}
