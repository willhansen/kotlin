@kotlin.annotation.Retention(konstue=SOURCE)
@java.lang.annotation.Retention(konstue=SOURCE)
@kotlin.Metadata
annotation class test/A1 {
    // source: 'annotations.kt'
    public abstract method x(): int
}
@kotlin.annotation.Retention(konstue=BINARY)
@java.lang.annotation.Retention(konstue=CLASS)
@kotlin.Metadata
annotation class test/A2 {
    // source: 'annotations.kt'
    public abstract method x(): int
}
@kotlin.annotation.Retention(konstue=RUNTIME)
@java.lang.annotation.Retention(konstue=RUNTIME)
@kotlin.Metadata
annotation class test/A3 {
    // source: 'annotations.kt'
    public abstract method x(): int
}
@kotlin.annotation.Retention(konstue=SOURCE)
@java.lang.annotation.Retention(konstue=SOURCE)
@kotlin.Metadata
public annotation class test/B1 {
    // source: 'annotations.kt'
    public abstract method x(): int
}
@kotlin.annotation.Retention(konstue=BINARY)
@java.lang.annotation.Retention(konstue=CLASS)
@kotlin.Metadata
public annotation class test/B2 {
    // source: 'annotations.kt'
    public abstract method x(): int
}
@kotlin.annotation.Retention(konstue=RUNTIME)
@java.lang.annotation.Retention(konstue=RUNTIME)
@kotlin.Metadata
public annotation class test/B3 {
    // source: 'annotations.kt'
    public abstract method x(): int
}
@test.A3(x=2)
@kotlin.Metadata
@test.A2(x=1)
public final class test/T1 {
    // source: 'annotations.kt'
    public method <init>(): void
}
@test.B3(x=2)
@kotlin.Metadata
@test.B2(x=1)
public final class test/T2 {
    // source: 'annotations.kt'
    public method <init>(): void
}