RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

IMPORTS:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public? final? [ResolvedTo(COMPANION_GENERATION)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public? final? [ResolvedTo(SUPER_TYPES)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

TYPES:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public? final? [ResolvedTo(TYPES)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

STATUS:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(STATUS)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(ARGUMENTS_OF_ANNOTATIONS)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(CONTRACTS)] fun resolveMe(): R|kotlin/Unit| {
        receive#(withGetter#)
    }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] fun resolveMe(): R|kotlin/Unit| {
        receive#(withGetter#)
    }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(ANNOTATIONS_ARGUMENTS_MAPPING)] fun resolveMe(): R|kotlin/Unit| {
        receive#(withGetter#)
    }
    public? final? [ResolvedTo(RAW_FIR)] fun receive([ResolvedTo(RAW_FIR)] konstue: Int): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [ResolvedTo(RAW_FIR)] konst withGetter: Int
        public? [ResolvedTo(RAW_FIR)] get(): Int { LAZY_BLOCK }

BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(BODY_RESOLVE)] fun resolveMe(): R|kotlin/Unit| {
        R|/receive|(R|/withGetter|)
    }
    public final [ResolvedTo(CONTRACTS)] fun receive([ResolvedTo(CONTRACTS)] konstue: R|kotlin/Int|): R|kotlin/Unit| {
    }
    public final [ResolvedTo(CONTRACTS)] konst withGetter: R|kotlin/Int|
        public [ResolvedTo(CONTRACTS)] get(): R|kotlin/Int| {
            ^ IntegerLiteral(42)
        }

FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] propertyWithGetter.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(BODY_RESOLVE)] fun resolveMe(): R|kotlin/Unit| {
        R|/receive|(R|/withGetter|)
    }
    public final [ResolvedTo(BODY_RESOLVE)] fun receive([ResolvedTo(BODY_RESOLVE)] konstue: R|kotlin/Int|): R|kotlin/Unit| {
    }
    public final [ResolvedTo(BODY_RESOLVE)] konst withGetter: R|kotlin/Int|
        public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Int| {
            ^ Int(42)
        }
