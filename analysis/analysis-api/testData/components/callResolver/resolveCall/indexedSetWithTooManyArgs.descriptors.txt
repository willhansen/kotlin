KtErrorCallInfo:
  candidateCalls = [
    KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = c
          isSafeNavigation = false
          type = C
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /C.set(<dispatch receiver>: C, a: kotlin.Int, b: kotlin.String, konstue: kotlin.Boolean): kotlin.Unit
          konstueParameters = [
            KtVariableLikeSignature:
              name = a
              receiverType = null
              returnType = kotlin.Int
              symbol = a: kotlin.Int
              callableIdIfNonLocal = null,
            KtVariableLikeSignature:
              name = b
              receiverType = null
              returnType = kotlin.String
              symbol = b: kotlin.String
              callableIdIfNonLocal = null,
            KtVariableLikeSignature:
              name = konstue
              receiverType = null
              returnType = kotlin.Boolean
              symbol = konstue: kotlin.Boolean
              callableIdIfNonLocal = null
          ]
          callableIdIfNonLocal = /C.set
      typeArgumentsMapping = {}
      argumentMapping = {
        1 -> (KtVariableLikeSignature:
          name = a
          receiverType = null
          returnType = kotlin.Int
          symbol = a: kotlin.Int
          callableIdIfNonLocal = null),
        "foo" -> (KtVariableLikeSignature:
          name = b
          receiverType = null
          returnType = kotlin.String
          symbol = b: kotlin.String
          callableIdIfNonLocal = null),
        3.14 -> (KtVariableLikeSignature:
          name = konstue
          receiverType = null
          returnType = kotlin.Boolean
          symbol = konstue: kotlin.Boolean
          callableIdIfNonLocal = null)
      }
  ]
  diagnostic = ERROR<CONSTANT_EXPECTED_TYPE_MISMATCH: The floating-point literal does not conform to the expected type Boolean>