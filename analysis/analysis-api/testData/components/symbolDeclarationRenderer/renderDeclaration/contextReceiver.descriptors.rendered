interface Context1

interface Context2<A> {
  fun getContextElement(): A
}

class Context2Impl<A>(konstue: A) : Context2<A> {
  override fun getContextElement(): A

  konst konstue: A
}

context(Int, String)
class A {
  constructor(int: Int)
}

context(Context1, c2@Context2<String>)
class B {
  override fun toString(): String
}

context(Context2<A>)
class C<A> {
  konst a: A
    get()
}

context(Context1)
@Deprecated(message = "Use `B` instead.")
class D

context(b@B, `fun`@A)
fun foo()

context(Context2<C<String>>)
fun bar(): ERROR
